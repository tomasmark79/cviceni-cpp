#include <iostream>
#include "20_priklad.h"
// #include <cstring>
using namespace std;

// Members of Class volba

string volba::text_napovedy = retezec_Cp1250_na_string_Cp852(R"(
SORT - program pro seøazení øádek daného souboru. Použití:
sort volba < vstupní-soubor > výstupní-soubor
Možné volby:
-n nebo /n øazení podle èísel na poèátcích øádek
-l nebo /l lexikografické øazení
(C) Piškvorky software 2017
)");

/* toto použití øetìzcù s jinými než ASCII znaky není doporuèené!
wstring volba::text_napovedy_wide = R"(
SORT - program pro seøazení øádek daného souboru. Použití:
sort volba < vstupní-soubor > výstupní-soubor
Možné volby:
-n nebo /n øazení podle èísel na poèátcích øádek
-l nebo /l lexikografické øazení
(C) Piškvorky software 2017
)";
*/


[[noreturn]]
void volba::napoveda()
{
    // nastav_konzolu_pro_cp1250();
    cerr << text_napovedy << endl;

    // toto nastaví výchozí hodnotu
    /*
    wcerr.imbue(std::locale(""));
    wcerr.imbue(std::locale("C"));
    wcerr.imbue(std::locale("POSIX"));
    */
    // wcerr << text_napovedy_wide << endl;

    // obnov_puvodni_nastaveni_konzoly();
    exit(1);

}
volba::volba(int argc, char **argv)
{
    if (argc != 2)
        napoveda(); // program exit
    if ((argv[1][0] != '-') && (argv[1][0] != '/')) //viz 14.1.3
        napoveda(); // program exit
    switch (argv[1][1])
    {
    case 'l':
        // zjistena_volba = lexikograficky;
        komparator = lexikograficky;
        return;
    case 'n':
        // zjistena_volba = numericky;
        komparator = podle_cisel;
        return;
    default:
        napoveda(); // program exit
    }
}
volba::u_komparator volba::zvoleno()
{
    return komparator;
}

// Members of Class tridic
void tridic::zpracuj(volba::u_komparator komparator)
{
    nacti();
    serad(komparator);
    vypis();
}

void tridic::nacti()
{
    while (getline(cin, radka))
    {
        soubor.push_back(radka);
    }
}

void tridic::serad(volba::u_komparator komparator)
{
//
//    if(zvoleno == volba::lexikograficky)
//    {
//        sort(soubor.begin(), soubor.end());
//    }
//    else if (zvoleno == volba::numericky) // elseif jen tak :-)
//    {
//        sort(soubor.begin(), soubor.end(), podle_cisel);
//    }
}

void tridic::vypis()
{
    for (auto lajna : soubor)
    {
        cout << lajna << endl;
    }
}


//// moje úprava
//void tridic::zpracuj_muj()
//{
//    string jmeno = "cz.txt";
//    string jmenoVystup = "cz-sorted.txt";
//    ifstream vstup(jmeno);
//    if (!vstup)
//    {
//        cerr << "Nepodaøilo se otevøít soubor " << jmeno << endl;
//        return;
//    }
//
//    cout << "reading..." << endl;
//    while (getline(vstup, radka))
//    {
//        soubor.push_back(radka); // uloží **kopii** pøedané instance
//    }
//
//    cout << "sorting..." << endl;
//    sort(soubor.begin(), soubor.end());
//    cout << "sorted..." << endl;
//    ofstream vystup(jmenoVystup);
//    if (!vystup)
//    {
//        cerr << "Nepodaøilo se otevøít soubor " << jmenoVystup << endl;
//        return;
//    }
//
//    cout << "writting..." << endl;
//    for(auto lajna: soubor)
//    {
//        vystup << lajna << endl;
//    }
//
//    cout << "written..." << endl;
//}


